4  swift                    checkEnumRawValues(swift::TypeChecker&, swift::EnumDecl*) + 84
5  swift                    (anonymous namespace)::DeclChecker::visitEnumDecl(swift::EnumDecl*) + 1053
6  swift                    (anonymous namespace)::DeclChecker::visit(swift::Decl*) + 2649
7  swift                    (anonymous namespace)::DeclChecker::visitEnumDecl(swift::EnumDecl*) + 1115
8  swift                    (anonymous namespace)::DeclChecker::visit(swift::Decl*) + 2649
9  swift                    (anonymous namespace)::DeclChecker::visitEnumDecl(swift::EnumDecl*) + 1115
10 swift                    (anonymous namespace)::DeclChecker::visit(swift::Decl*) + 2649
11 swift                    (anonymous namespace)::DeclChecker::visitEnumDecl(swift::EnumDecl*) + 1115
12 swift                    (anonymous namespace)::DeclChecker::visit(swift::Decl*) + 2649
13 swift                    swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) + 152
14 swift                    swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 339
15 swift                    swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 765
16 swift                    swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 261
17 swift                    swift::TypeChecker::typeCheckTopLevelCodeDecl(swift::TopLevelCodeDecl*) + 140
18 swift                    swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int) + 1609
19 swift                    swift::CompilerInstance::performSema() + 4064
20 swift                    performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&) + 741
21 swift                    frontend_main(llvm::ArrayRef<char const*>, char const*, void*) + 2682
22 swift                    main + 2247
