2  swift          
3  libpthread.so.0
4  libc.so.6       gsignal + 57
5  libc.so.6       abort + 328
6  libc.so.6      
7  libc.so.6      
8  swift           swift::LValueType::get(swift::Type) + 639
9  swift           swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) + 7530
10 swift           swift::constraints::ConstraintSystem::solveRec(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) + 313
11 swift           swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) + 73
12 swift           swift::TypeChecker::solveForExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*, swift::constraints::ConstraintSystem&, llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>) + 614
13 swift           swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::ContextualTypePurpose, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>, swift::ExprTypeCheckListener*) + 569
14 swift           swift::TypeChecker::typeCheckBinding(swift::Pattern*&, swift::Expr*&, swift::DeclContext*) + 112
15 swift           swift::TypeChecker::typeCheckPatternBinding(swift::PatternBindingDecl*, unsigned int) + 265
16 swift          
17 swift          
18 swift          
19 swift          
20 swift           swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) + 151
21 swift           swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int) + 1474
22 swift           swift::CompilerInstance::performSema() + 2946
23 swift          
24 swift           frontend_main(llvm::ArrayRef<char const*>, char const*, void*) + 2482
25 swift           main + 2705
26 libc.so.6       __libc_start_main + 245
27 swift          
